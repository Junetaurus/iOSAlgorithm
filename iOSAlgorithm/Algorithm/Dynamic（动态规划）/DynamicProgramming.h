
#import <Foundation/Foundation.h>

@interface DynamicProgramming : NSObject

/*
 最长公共子序列(LCS)。
 题目：如果字符串一的所有字符按其在字符串中的顺序出现在另外一个字符串二中，则字符串一称之为字符串二的子串。
 注意，并不要求子串（字符串一）的字符必须连续出现在字符串二中。
 请编写一个函数，输入两个字符串，求它们的最长公共子串，并打印出最长公共子串。
 例如：输入两个字符串BDCABA和ABCBDAB，字符串BCBA和BDAB都是是它们的最长公共子串，
 则输出它们的长度4，并打印任意一个子串。
 */

+ (NSString *)getRandomString:(NSInteger)length;

+ (NSString *)lcs:(NSString *)str1 withOtherString:(NSString *)str2;

@end

/*
 动态规划过程是：每次决策依赖于当前状态，又随即引起状态的转移。一个决策序列就是在变化的状态中产生出来的，所以，这种多阶段最优化决策解决问题的过程就称为动态规划.
 将待求解的问题分解为若干个子问题（阶段），按顺序求解子阶段，前一子问题的解，为后一子问题的求解提供了有用的信息。在求解任一子问题时，列出各种可能的局部解，通过决策保留那些有可能达到最优的局部解，丢弃其他局部解。依次解决各子问题，最后一个子问题就是初始问题的解。
*/